#####################################################################
# (0) General settings (to be modified for each project)            #
#####################################################################

### User-specified directories ###
workdir=/home/hltcoe/kduh/p/mt/wnmt18/50000-30000
datadir=/home/hltcoe/kduh/p/mt/wnmt18/data-bpe
modeldir=$workdir/300-300-500-dot-1-lstm-.4
rootdir=/home/hltcoe/kduh/src/mt/sockeye-recipes/

### Language pair (source and target) ###
# Note: We assume all bitext files contain these as suffices. 
# e.g. $train_tok.$src, $train_tok.$trg refer to the source and target 
src=de
trg=en


#####################################################################
# (1) preprocess-bpe.sh settings (modify if needed)                 #
#####################################################################

### Number of symbols to use for BPE ###
# Note: we perform source and target BPE separately
# This corresponds to initial source (src) and target (trg) vocab size
bpe_symbols_src=50000
bpe_symbols_trg=30000

### Filename for BPE-processed bitext file ###
# Note: the following default names should be fine for most use cases
train_bpe=$datadir/train.bpe-${bpe_symbols_src}
valid_bpe=$datadir/valid.bpe-${bpe_symbols_src}

### Filename for BPE vocabulary ###
# Note: the following default names should be fine for most use cases
# Note: bpe_vocab_src will be needed for applying BPE to test, in translate.sh
bpe_vocab_src=${train_bpe}.$src.bpe_vocab
bpe_vocab_trg=${train_bpe}.$trg.bpe_vocab


#####################################################################
# (2) train.sh settings (modify if needed)                          #
#####################################################################

# Model architecture
num_embed="300:300"
rnn_num_hidden=500
rnn_attention_type="dot"
num_layers=1
rnn_cell_type="lstm"

# Training configuration
max_seq_len="100:100"
num_words="${bpe_symbols_src}:${bpe_symbols_trg}"
word_min_count="1:1"
batch_size=128
embed_dropout=".4:.4"
rnn_dropout_inputs=".0:.0"
rnn_dropout_states=".0:.0"

# Logging and stopping condition
checkpoint_frequency=10000
min_num_epochs=0
max_num_epochs=30
max_updates=10000000
keep_last_params=5
decode_and_evaluate=-1
